package com.example.jpa.ch02;

public class VariableTest {
    // 변수(Variable)는 변하는 수이다.
    // 변수는 언제쓸까?
    // - 프로그램에서는 항상 변하는 값을 나타낼 필요가 있다.
    // - 표현하려는 수에 맞는 데이터 타입(자료형)을 이용하여 변수를 선언
    // - 표현하려는 자료가 숫자, 문자, 문자열 등 다양할 수 있으므로 그에 맞는 자료형을 사용

    // 변수의 이름을 만들 때에는
    // - 변수 이름은 영문자(대문자, 소문자)나 숫자를 사용할 수 있고, 특수문자 중에는 $과_만 사용한다.
    // - 변수 이름의 시작은 숫자로 할 수 없다.
    // - 자바에서 이미 사용하고 있는 예약어는 사용할 수 없다.
    // - 변수의 이름은 프로그램 내에서 사용되는 것이므로 그 용도에 맞게 가독성이 좋게 네이밍 한다.
    // - 변수의 이름의 길이는 상관없으니, 변수의 명명을 확실하게 하는 것이 좋다.

    // ====================================================================================================

    // 자료형(Data Type) - 정수는 어떻게 표현할까?
    // 변수와 메모리
    // - 변수를 선언하면 해당되는 자료형의 크기 만큼 메모리가 할당된다.
    // - 변수는 할당한 메모리를 가리키는 이름
    int level = 10; // 4바이트 정수형 메모리가 level 이라는 이름으로 할당

    // byte와 short
    // - byte: 1바이트 단위의 자료형 동영상, 음악파일, 실행파일의 자료를 처리할 때 사용
    // - short: 2바이트 단위의 자료형 C/C++ 언어와 호환 시 사용

    // int
    // - 자바에서 사용되는 정수에 대한 기본 자료형
    // - 4바이트 단위의 자료형
    // - 프로그램에서 사용하는 모든 숫자(리터럴)은 int로 저장
    // - 32비트를 초과하는 숫자는 long 자료형으로 처리

    // long
    // - 8바이트 자료형
    // - 숫자의 뒤에 알파벳 L 또는 l을 써서 long 자료형임을 표시

    public static void main(String[] args) {
        int age, count;
        age = 10; // age라는 변수에 10이라는 값을 대입한다. equal의 개념이 아니다.

        int level = 10000;
        System.out.println(age); // 10
        System.out.println(level); // 10000

        byte bNum = -128;
        System.out.println(bNum);
        // byte bNum = 128이면 byte 자료형에서 -128~127 범위 밖이므로 int으로 바꿔주어야 한다.

        long lNum = 12345678900L;
        System.out.println(lNum);
    }
}
