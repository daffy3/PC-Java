package ch02;

public class Intro {
    // 함수(function)
    // - 하나의 기능을 수행하는 일련의 코드
    // - 구현된(정의된)  함수는 호출하여 사용하고 호출된 함수는 기능이 끝나면 제어가 반환된다.
    // - 함수로 구현된 하나의 기능은 여러 곳에서 동일한 방식으로 호출되어 사용될 수 있다.

    // 함수 정의하기
    // 함수는 이름, 매개변수, 반환 값, 함수 몸체(body)로 구성된다.

    // 함수 호출과 스택 메모리
    // - 스택: 함수가 호출될 때 지역 변수들이 사용하는 메모리
    // - 함수의 수행이 끝나면 자동으로 반환되는 메모리

    // 1. main() 함수가 사용할 메모리 공간이 스택에 생성된다.
    // 2. main() 함수에서 선언된 지역변수들도 스택에 생성된다.
    // 3. main() 함수에서 addNum() 함수를 호출한다.
    // 4. addNum() 함수가 사용할 메모리 공간이 스택에 생성된다.
    // 5. addNum() 함수가 사용한 메모리 공간은 자동으로 사라진다.
    // 지역변수 같은 경우는 그 함수 내부에서만 사용되고 실행이 완료되면 없어진다.

    // ====================================================================================================

    // 함수와 메서드의 차이는 함수는 어디 속해있는 것이 아닌 단독모듈이다.
    // 메서드는 클래스 내에 속해있다. 클래스의 멤버변수들을 활용하여 구현된 것이 메서드이다.
    // 메서드는 객체의 기능을 구현하기 위해 클래스 내부에 구현되는 함수
    // 멤버 함수(Member function)이라고도 한다.
    // 메서드를 구현함으로써 객체의 기능이 구현된다.
    // 메서드의 이름은 그 객체를 사용하는 객체(클라이언트)에 맞게 짓는 것이 좋다. - 카멜케이스로 명명
}
