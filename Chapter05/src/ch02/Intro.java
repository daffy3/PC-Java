package ch02;

public class Intro {
    // 트리(tree): 부모 노드와 자식 노드 간의 연결로 이루어진 자료구조
    // 힙(heap): Priority Queue 구현(우선 큐)
    // Max heap: 부모 노드는 자식 노드보다 항상 크거나 같은 값을 갖는 경우
    // Min heap: 부모 노드는 자식 노드보다 항상 작거나 같은 값을 갖는 경우

    // 이진트리: 부모노드에 자식노드가 두 개 이하인 트리
    // 이진검색트리(Binary Search Tree): 검색을 위해 만들어진 트리
    // - 자료(key)의 중복을 허용하지 않음
    // - 왼쪽 자식노드는 부모 노드보다 작은 값, 오른쪽 자식노드는 부모 노드보다 큰 값을 가짐
    // - 자료를 검색할 때 걸리는 시간이 평균 log(n)
    // - Inorder traversal 탐색을 하게 되면 자료가 정렬되어 출력된다.

    // 해싱(Hashing): 자료를 검색하기 위한 자료구조
    // - 검색을 위한 자료구조
    // - 키(key)에 대한 자료를 검색하기 위한 사전(Dictionary) 개념의 자료구조
    // - key는 유일하고 이에 대한 value를 쌍으로 저장
    // - index = h(key): 해시 함수가 key에 대한 인덱스를 반환해줌. 해당 인덱스 위치에 자료를 저장하거나 검색하게 된다.
    // - 해시 함수에 의해 인덱스 연산이 산술적으로 가능
    // - 저장되는 메모리 구조를 해시테이블이라고 한다.
    // - JDK 클래스: HashMap, Properties
}
